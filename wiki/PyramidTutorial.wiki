#summary Example setup running pyramid on appengine.
#labels pyramid,appengine,python,tutorial

= Introduction =

This is a tutorial on getting the basic tutorial code for Pyramid running on appengine.
Its based on predefined project.  A paster based template to build the project will come later. 


= Details =

This setup assumes your using linux.

== Setup ==

To do the setup I am going to use a buildout recipe developed by Rodrigo Moraes <rodrigo moraes at gmail com>.  Recipe at http://pypi.python.org/pypi/appfy.recipe.gae/0.9.1.



Make a directory for your tutorial.
{{{
timh@chrome:~$ mkdir tut1
timh@chrome:~$ cd tut1
}}}

Then setup virtualenv so you can install the buildout recipe.
{{{

timh@chrome:~/tut1$ virtualenv --no-site-packages --python=/usr/bin/python2.5 .
Running virtualenv with interpreter /usr/bin/python2.5
New python executable in ./bin/python2.5
Also creating executable in ./bin/python
Installing setuptools............done.
}}}

Activate the virtualenv.  *Note after this part of the setup you will not use virtualenv again*. Then use easy_install to install the appfy.recipe.gae
{{{
timh@chrome:~/tut1$ source bin/activate
(tut1)timh@chrome:~/tut1$ bin/easy_install appfy.recipe.gae
}}}

Now deactivate virtualenv
{{{
(tut1)timh@chrome:~/tut1$ deactivate
}}}

Next check out the sample app which has the bootstrap and buildout configs to be used for the rest of the tutorial.

{{{
timh@chrome:~/tut1$
timh@chrome:~/tut1$ svn checkout http://bfg-pages.googlecode.com/svn/pyramid-gae-tutorial/trunk app
A    app/default_error.html
A    app/settings.yaml
A    app/app.yaml
A    app/pkg_resources.py
A    app/views.py
A    app/bootstrap.py
A    app/buildout.cfg
A    app/lib
A    app/lib/dist
A    app/utils.py
A    app/static
A    app/static/logo.png
A    app/static/pylons.css
A    app/static/favicon.ico
A    app/tests.py
A    app/models.py
A    app/main.py
A    app/templates
A    app/templates/mytemplate.pt
Checked out revision 159.
}}}

Next we need to create some symlinks to varios .cfg files required for buildout.
{{{
timh@chrome:~/tut1$ ln -s app/buildout.cfg 
timh@chrome:~/tut1$ ln -s app/bootstrap.py 
timh@chrome:~/tut1$ ln -s app/gaetools.cfg 
timh@chrome:~/tut1$ ln -s app/versions.cfg 

}}}

make a var/downloads so that buildout can cache its downloads.

{{{
timh@chrome:~/tut1$ mkdir -p var/downloads
}}}

Then run bootstrap.py which sets up the environment (this will use distribute)

{{{ 

timh@chrome:~/tut1$ python2.5 bootstrap.py 

... stuff happens ...
}}}

Now run buildout, which will download and install pyramid and all of it's dependancies in app/lib/dist.  This recipe unpicks the eggs and only deploys the required files.

{{{
timh@chrome:~/tut1$ bin/buildout

... stuff happens ...

timh@chrome:~/tut1$

}}}

Now start the dev server.

{{{
timh@chrome:~/tut1$ bin/dev_appserver 
INFO     2010-12-03 15:24:27,784 appengine_rpc.py:153] Server: appengine.google.com
WARNING  2010-12-03 15:24:27,788 datastore_file_stub.py:573] Could not read datastore data from /home/timh/tut1/var/data.store
INFO     2010-12-03 15:24:27,816 dev_appserver_main.py:485] Running application pyramid-gae-tutorial on port 8080: http://localhost:8080
WARNING  2010-12-03 15:24:33,924 main.py:20] Starting main
}}}

Point your web browser at http://localhost:8080/ 
and something similar to below will appear in the terminal

{{{
INFO     2010-12-03 15:24:34,171 dev_appserver.py:3317] "GET / HTTP/1.1" 200 -
}}}

== Details of the sample app ==

Now lets look at the difference between this sample app and the one in the original tutorial.

things to discuss.

  * main.py
  * run_wsgi_app
  * settings
  * debugging with pdb
  * static handlers.  
  * default_error handler
  * app.yaml
  * configuring chameleon


== Deploying the app ==

  * appcfg
 
== Some important info/links for appengine ==

  